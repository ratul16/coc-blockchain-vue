// This file is to export the smart contract locally for the vue app to use
import Web3 from 'web3';

const contractAddress = import.meta.env.VITE_MANAGEMENT;

//http provider shows vue which blockchain to target
const provider = new Web3.providers.HttpProvider('http://127.0.0.1:7545');

// passing provider to web3
const web3 = new Web3(provider);

// abi(Application Binary Interface) connects smart contract with the vue app

const abi = [{ "inputs": [], "stateMutability": "nonpayable", "type": "constructor" }, { "anonymous": false, "inputs": [{ "indexed": true, "internalType": "address", "name": "user", "type": "address" }, { "indexed": false, "internalType": "string", "name": "eventLog", "type": "string" }, { "indexed": false, "internalType": "string", "name": "variableID", "type": "string" }, { "indexed": false, "internalType": "uint256", "name": "timestamp", "type": "uint256" }], "name": "UserActivity", "type": "event" }, { "inputs": [{ "internalType": "string", "name": "_caseNo", "type": "string" }, { "internalType": "string", "name": "_entityId", "type": "string" }, { "internalType": "string", "name": "_data", "type": "string" }], "name": "addEntity", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "string", "name": "_caseNo", "type": "string" }, { "internalType": "string", "name": "_fileList", "type": "string" }], "name": "addEvidenceFile", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "string", "name": "_email", "type": "string" }, { "internalType": "bool", "name": "_hasAccess", "type": "bool" }], "name": "addUserAccess", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "string", "name": "_caseNo", "type": "string" }, { "internalType": "string", "name": "_investigatorName", "type": "string" }], "name": "createCaseFile", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "string", "name": "_caseNo", "type": "string" }, { "internalType": "string", "name": "_id", "type": "string" }, { "internalType": "enum Management.Roles", "name": "_role", "type": "uint8" }, { "internalType": "string", "name": "_key", "type": "string" }], "name": "createSharedKey", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [], "name": "getAllCaseFiles", "outputs": [{ "internalType": "string[]", "name": "", "type": "string[]" }], "stateMutability": "view", "type": "function" }, { "inputs": [], "name": "getAllEntities", "outputs": [{ "internalType": "string[]", "name": "", "type": "string[]" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "enum Management.Roles", "name": "_role", "type": "uint8" }], "name": "getCaseAccess", "outputs": [{ "components": [{ "internalType": "string[]", "name": "caseList", "type": "string[]" }], "internalType": "struct Management.CaseAccess", "name": "", "type": "tuple" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "string", "name": "_caseNo", "type": "string" }], "name": "getCaseFile", "outputs": [{ "components": [{ "internalType": "string", "name": "caseNo", "type": "string" }, { "internalType": "string", "name": "investigatorName", "type": "string" }, { "internalType": "uint256", "name": "timeStamp", "type": "uint256" }, { "internalType": "string", "name": "evidenceList", "type": "string" }, { "internalType": "string[]", "name": "entityList", "type": "string[]" }, { "internalType": "string[]", "name": "sharedKeys", "type": "string[]" }, { "internalType": "address", "name": "createdBy", "type": "address" }], "internalType": "struct Management.CaseFile", "name": "", "type": "tuple" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "string", "name": "_entityID", "type": "string" }], "name": "getEntity", "outputs": [{ "components": [{ "internalType": "string", "name": "entityId", "type": "string" }, { "internalType": "address", "name": "createdBy", "type": "address" }, { "internalType": "string", "name": "data", "type": "string" }], "internalType": "struct Management.Entity", "name": "", "type": "tuple" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "enum Management.Roles", "name": "_role", "type": "uint8" }], "name": "getRBACList", "outputs": [{ "components": [{ "internalType": "bool", "name": "investigatorName", "type": "bool" }, { "internalType": "bool", "name": "fileHash", "type": "bool" }, { "internalType": "bool", "name": "name", "type": "bool" }, { "internalType": "bool", "name": "email", "type": "bool" }, { "internalType": "bool", "name": "gender", "type": "bool" }, { "internalType": "bool", "name": "dob", "type": "bool" }, { "internalType": "bool", "name": "phone", "type": "bool" }, { "internalType": "bool", "name": "userAddress", "type": "bool" }, { "internalType": "bool", "name": "additionalInfo", "type": "bool" }], "internalType": "struct Management.RBAC", "name": "", "type": "tuple" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "string", "name": "_id", "type": "string" }], "name": "getSharedKey", "outputs": [{ "components": [{ "internalType": "string", "name": "id", "type": "string" }, { "internalType": "enum Management.Roles", "name": "role", "type": "uint8" }, { "internalType": "string", "name": "key", "type": "string" }], "internalType": "struct Management.sharedKey", "name": "", "type": "tuple" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "string", "name": "_email", "type": "string" }], "name": "getUserAccess", "outputs": [{ "components": [{ "internalType": "bool", "name": "hasAccess", "type": "bool" }], "internalType": "struct Management.UserAccess", "name": "", "type": "tuple" }], "stateMutability": "view", "type": "function" }, { "inputs": [], "name": "getUserCaseFiles", "outputs": [{ "internalType": "string[]", "name": "", "type": "string[]" }], "stateMutability": "view", "type": "function" }, { "inputs": [], "name": "getUserEvents", "outputs": [{ "components": [{ "internalType": "address", "name": "userAddress", "type": "address" }, { "internalType": "string", "name": "eventLog", "type": "string" }, { "internalType": "string", "name": "variableID", "type": "string" }, { "internalType": "uint256", "name": "timestamp", "type": "uint256" }], "internalType": "struct Management.Activity[]", "name": "", "type": "tuple[]" }], "stateMutability": "view", "type": "function" }, { "inputs": [{ "internalType": "enum Management.Roles", "name": "_role", "type": "uint8" }, { "internalType": "bool", "name": "_investigatorName", "type": "bool" }, { "internalType": "bool", "name": "_fileHash", "type": "bool" }, { "internalType": "bool", "name": "_name", "type": "bool" }, { "internalType": "bool", "name": "_email", "type": "bool" }, { "internalType": "bool", "name": "_gender", "type": "bool" }, { "internalType": "bool", "name": "_dob", "type": "bool" }, { "internalType": "bool", "name": "_phone", "type": "bool" }, { "internalType": "bool", "name": "_userAddress", "type": "bool" }, { "internalType": "bool", "name": "_additionalInfo", "type": "bool" }], "name": "updateAccess", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "enum Management.Roles", "name": "_role", "type": "uint8" }, { "internalType": "bool", "name": "_investigatorName", "type": "bool" }, { "internalType": "bool", "name": "_fileHash", "type": "bool" }, { "internalType": "bool", "name": "_name", "type": "bool" }, { "internalType": "bool", "name": "_email", "type": "bool" }, { "internalType": "bool", "name": "_gender", "type": "bool" }, { "internalType": "bool", "name": "_dob", "type": "bool" }, { "internalType": "bool", "name": "_phone", "type": "bool" }, { "internalType": "bool", "name": "_userAddress", "type": "bool" }, { "internalType": "bool", "name": "_additionalInfo", "type": "bool" }], "name": "updateAccessList", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "enum Management.Roles", "name": "_role", "type": "uint8" }, { "internalType": "string[]", "name": "_caseNo", "type": "string[]" }], "name": "updateCaseAccess", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "string", "name": "_entityId", "type": "string" }, { "internalType": "string", "name": "_data", "type": "string" }], "name": "updateEntity", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "string", "name": "_email", "type": "string" }, { "internalType": "bool", "name": "_hasAccess", "type": "bool" }], "name": "updateRoleAccess", "outputs": [], "stateMutability": "nonpayable", "type": "function" }, { "inputs": [{ "internalType": "string", "name": "_caseNo", "type": "string" }, { "internalType": "string[]", "name": "_sharedKeys", "type": "string[]" }], "name": "updateSharedKeysInCaseFile", "outputs": [], "stateMutability": "nonpayable", "type": "function" }];


//local copy of the contract
const CmContract = new web3.eth.Contract(abi, contractAddress);

export default CmContract;